"""add display columns to trade table

Revision ID: fa0391f5ea16
Revises: cba25b240e75
Create Date: 2025-07-20 14:59:21.351514

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = "fa0391f5ea16"
down_revision: Union[str, Sequence[str], None] = "cba25b240e75"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("order_book_snapshot", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("idx_order_book_asset_timestamp"))
        batch_op.drop_index(batch_op.f("ix_order_book_snapshot_asset_id"))
        batch_op.drop_index(batch_op.f("ix_order_book_snapshot_channel_uuid"))
        batch_op.drop_index(batch_op.f("ix_order_book_snapshot_exchange_timestamp"))
        batch_op.drop_index(batch_op.f("ix_order_book_snapshot_id"))

    op.drop_table("order_book_snapshot")
    with op.batch_alter_table("order_book_level", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("idx_order_book_level_side_price"))
        batch_op.drop_index(batch_op.f("idx_order_book_level_snapshot_side"))
        batch_op.drop_index(batch_op.f("ix_order_book_level_id"))
        batch_op.drop_index(batch_op.f("ix_order_book_level_received_at"))
        batch_op.drop_index(batch_op.f("ix_order_book_level_side"))
        batch_op.drop_index(batch_op.f("ix_order_book_level_snapshot_id"))

    op.drop_table("order_book_level")
    with op.batch_alter_table("trade", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "price_display", sa.Numeric(precision=18, scale=3), nullable=False
            )
        )
        batch_op.add_column(
            sa.Column(
                "quantity_display", sa.Numeric(precision=18, scale=0), nullable=False
            )
        )
        batch_op.add_column(
            sa.Column(
                "total_usd_display", sa.Numeric(precision=18, scale=3), nullable=False
            )
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("trade", schema=None) as batch_op:
        batch_op.drop_column("total_usd_display")
        batch_op.drop_column("quantity_display")
        batch_op.drop_column("price_display")

    op.create_table(
        "order_book_level",
        sa.Column("snapshot_id", sa.INTEGER(), nullable=False),
        sa.Column("side", sa.VARCHAR(length=4), nullable=False),
        sa.Column("price_amount", sa.NUMERIC(precision=36, scale=0), nullable=False),
        sa.Column("quantity_amount", sa.NUMERIC(precision=36, scale=0), nullable=False),
        sa.Column("total_amount", sa.NUMERIC(precision=36, scale=0), nullable=True),
        sa.Column("total_orders", sa.INTEGER(), nullable=True),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.Column("received_at", sa.DATETIME(), nullable=True),
        sa.CheckConstraint("side IN ('bid', 'ask')", name=op.f("chk_side_valid")),
        sa.CheckConstraint("price_amount >= 0", name=op.f("chk_price_non_negative")),
        sa.CheckConstraint(
            "quantity_amount >= 0", name=op.f("chk_quantity_non_negative")
        ),
        sa.ForeignKeyConstraint(
            ["snapshot_id"], ["order_book_snapshot.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("order_book_level", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_order_book_level_snapshot_id"), ["snapshot_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_order_book_level_side"), ["side"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_order_book_level_received_at"), ["received_at"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_order_book_level_id"), ["id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("idx_order_book_level_snapshot_side"),
            ["snapshot_id", "side"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("idx_order_book_level_side_price"),
            ["side", "price_amount"],
            unique=False,
        )

    op.create_table(
        "order_book_snapshot",
        sa.Column("asset_id", sa.INTEGER(), nullable=False),
        sa.Column(
            "exchange_timestamp", sa.NUMERIC(precision=20, scale=6), nullable=False
        ),
        sa.Column("channel_uuid", sa.VARCHAR(length=50), nullable=True),
        sa.Column("raw_data", sqlite.JSON(), nullable=True),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(["asset_id"], ["asset.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("order_book_snapshot", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_order_book_snapshot_id"), ["id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_order_book_snapshot_exchange_timestamp"),
            ["exchange_timestamp"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_order_book_snapshot_channel_uuid"),
            ["channel_uuid"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_order_book_snapshot_asset_id"), ["asset_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("idx_order_book_asset_timestamp"),
            ["asset_id", "exchange_timestamp"],
            unique=False,
        )

    # ### end Alembic commands ###
